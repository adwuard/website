"use strict";(self.webpackChunkchaos_mesh_website=self.webpackChunkchaos_mesh_website||[]).push([[2401],{196:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>d,default:()=>h,frontMatter:()=>c,metadata:()=>l,toc:()=>a});const l=JSON.parse('{"id":"tkl-api/tkl_adc","title":"ADC Driver","description":"Description","source":"@site/i18n/zh/docusaurus-plugin-content-docs/current/tkl-api/tkl_adc.md","sourceDirName":"tkl-api","slug":"/tkl-api/tkl_adc","permalink":"/zh/docs/tkl-api/tkl_adc","draft":false,"unlisted":false,"editUrl":"https://github.com/tuya/TuyaOpen/edit/master/i18n/zh/docusaurus-plugin-content-docs/current/tkl-api/tkl_adc.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Touch","permalink":"/zh/docs/peripherals/touch"},"next":{"title":"BLUETOOTH","permalink":"/zh/docs/tkl-api/tkl_bluetooth"}}');var i=t(4848),s=t(8453);const c={},d="ADC Driver",r={},a=[{value:"Description",id:"description",level:2},{value:"Introduction",id:"introduction",level:3},{value:"Classification",id:"classification",level:3},{value:"Technical Specifications",id:"technical-specifications",level:3},{value:"API Description",id:"api-description",level:2},{value:"tkl_adc_init",id:"tkl_adc_init",level:3},{value:"TUYA_AD_DA_CH_LIST_U\uff1a",id:"tuya_ad_da_ch_list_u",level:4},{value:"TUYA_ADC_TYPE_E\uff1a",id:"tuya_adc_type_e",level:4},{value:"TUYA_ADC_MODE_E\uff1a",id:"tuya_adc_mode_e",level:4},{value:"tkl_adc_deinit",id:"tkl_adc_deinit",level:3},{value:"tkl_adc_width_get",id:"tkl_adc_width_get",level:3},{value:"tkl_adc_ref_voltage_get",id:"tkl_adc_ref_voltage_get",level:3},{value:"tkl_adc_temperature_get",id:"tkl_adc_temperature_get",level:3},{value:"tkl_adc_read_data",id:"tkl_adc_read_data",level:3},{value:"tkl_adc_read_single_channel",id:"tkl_adc_read_single_channel",level:3},{value:"tkl_adc_read_voltage",id:"tkl_adc_read_voltage",level:3},{value:"Examples",id:"examples",level:2},{value:"Example 1",id:"example-1",level:3},{value:"Example 2",id:"example-2",level:3}];function _(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"adc-driver",children:"ADC Driver"})}),"\n",(0,i.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(n.h3,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsx)(n.p,{children:"ADC, Analog to Digital Converter, generally refers to an electronic component that converts a continuous-time, continuous-amplitude analog signal into a discrete-time, discrete-amplitude digital signal."}),"\n",(0,i.jsx)(n.p,{children:"A/D conversion typically involves four processes: sampling, holding, quantization, and encoding. In actual circuits, some of these processes may be combined, such as sampling and holding, and quantization and encoding, which are often implemented simultaneously during the conversion process."}),"\n",(0,i.jsx)(n.h3,{id:"classification",children:"Classification"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Direct ADC"}),(0,i.jsx)(n.th,{children:"Parallel Comparator ADC"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Successive Approximation ADC"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Flash ADC"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Indirect ADC"}),(0,i.jsx)(n.td,{children:"Dual Slope ADC"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"technical-specifications",children:"Technical Specifications"}),"\n",(0,i.jsx)(n.p,{children:"Resolution: Theoretically, the resolution of an ADC to the input signal, generally 8-bit, 10-bit, 12-bit, 16-bit, etc."}),"\n",(0,i.jsx)(n.p,{children:"Accuracy: The difference between the actual analog voltage and the sampled voltage, where the maximum difference is the absolute accuracy, and the percentage of the maximum difference to the full-scale analog voltage is called the relative error."}),"\n",(0,i.jsx)(n.p,{children:"Conversion Time: The time required for each sample, indicating the conversion speed of the ADC, related to the ADC's clock frequency, sampling period, and conversion period."}),"\n",(0,i.jsx)(n.p,{children:"Data Output Mode: Parallel output, serial output."}),"\n",(0,i.jsx)(n.p,{children:"Operating Voltage: Attention should be given to the ADC's operating voltage range and whether it can directly measure negative voltages, etc."}),"\n",(0,i.jsx)(n.h2,{id:"api-description",children:"API Description"}),"\n",(0,i.jsx)(n.h3,{id:"tkl_adc_init",children:"tkl_adc_init"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:"OPERATE_RET tkl_adc_init(TUYA_ADC_NUM_E port_num, TUYA_ADC_BASE_CFG_T *cfg);\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Function Description:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"ADC Initialization"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Parameters:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"port_num"}),": ADC port number, each port corresponds to an ADC entity device (usually with multiple channels), values as follows:"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Definition"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Remarks"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"TUYA_ADC_NUM_0"}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"ADC Port 0"}),(0,i.jsx)(n.td,{style:{textAlign:"left"}})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"TUYA_ADC_NUM_1"}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"ADC Port 1"}),(0,i.jsx)(n.td,{style:{textAlign:"left"}})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"TUYA_ADC_NUM_2"}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"ADC Port 2"}),(0,i.jsx)(n.td,{style:{textAlign:"left"}})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"TUYA_ADC_NUM_3"}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"ADC Port 3"}),(0,i.jsx)(n.td,{style:{textAlign:"left"}})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"TUYA_ADC_NUM_4"}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"ADC Port 4"}),(0,i.jsx)(n.td,{style:{textAlign:"left"}})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"TUYA_ADC_NUM_5"}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"ADC Port 5"}),(0,i.jsx)(n.td,{style:{textAlign:"left"}})]})]})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"cfg"}),": ADC base configuration, values as follows:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:"typedef struct {\n    TUYA_AD_DA_CH_LIST_U  ch_list;  // ADC channel list\n    uint8_t ch_nums;        // Number of ADC channels to be sampled\n    uint8_t  width;         // Resolution (bit width)\n    uint32_t freq;          // Sampling frequency\n    TUYA_ADC_TYPE_E type;\t// ADC sampling type\n    TUYA_ADC_MODE_E mode;   // ADC sampling mode\n    uint16_t   conv_cnt;    // ADC number of samples\n    uint32_t   ref_vol;     // ADC reference voltage (unit: mv)\n} TUYA_ADC_BASE_CFG_T;\n"})}),"\n",(0,i.jsx)(n.h4,{id:"tuya_ad_da_ch_list_u",children:"TUYA_AD_DA_CH_LIST_U\uff1a"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:"typedef union {\n    TUYA_AD_DA_CH_LIST_BIT_T bits;\n    uint32_t data;\n}TUYA_AD_DA_CH_LIST_U;\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:"typedef struct {\n    uint32_t ch_0             : 1;\n    uint32_t ch_1             : 1;\n    uint32_t ch_2             : 1;\n    uint32_t ch_3             : 1;\n    uint32_t ch_4             : 1;\n    uint32_t ch_5             : 1;\n    uint32_t ch_6             : 1;\n    uint32_t ch_7             : 1;\n    uint32_t ch_8             : 1;\n    uint32_t ch_9             : 1;\n    uint32_t ch_10            : 1;\n    uint32_t ch_11            : 1;\n    uint32_t ch_12            : 1;\n    uint32_t ch_13            : 1;\n    uint32_t ch_14            : 1;\n    uint32_t ch_15            : 1;\n    uint32_t rsv              :16;\n}TUYA_AD_DA_CH_LIST_BIT_T;\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The channel list can be operated using bit manipulation or through the ",(0,i.jsx)(n.code,{children:"data"})," field, both have the same effect."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"ch_nums"})," is the number of channels to be sampled."]}),"\n",(0,i.jsx)(n.h4,{id:"tuya_adc_type_e",children:"TUYA_ADC_TYPE_E\uff1a"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Definition"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Remarks"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"TUYA_ADC_INNER_SAMPLE_VOL"}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"ADC samples internal voltage (e.g., power supply voltage)"}),(0,i.jsx)(n.td,{style:{textAlign:"left"}})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"TUYA_ADC_EXTERNAL_SAMPLE_VOL"}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"ADC samples external voltage (e.g., external pin voltage)"}),(0,i.jsx)(n.td,{style:{textAlign:"left"}})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"tuya_adc_mode_e",children:"TUYA_ADC_MODE_E\uff1a"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:"typedef enum {\n    TUYA_ADC_SINGLE = 0,       ///< Single conversion mode\n    TUYA_ADC_CONTINUOUS,       ///< Continuous conversion mode\n    TUYA_ADC_SCAN,             ///< Scan mode\n} TUYA_ADC_MODE_E;\n"})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Definition"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Remarks"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"TUYA_ADC_SINGLE"}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"Single channel sampling"}),(0,i.jsx)(n.td,{style:{textAlign:"left"}})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"TUYA_ADC_CONTINUOUS"}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"Single channel multiple sampling"}),(0,i.jsx)(n.td,{style:{textAlign:"left"}})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"TUYA_ADC_SCAN"}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"Scan mode sampling"}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"Multiple channel sampling"})]})]})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"conv_cnt"})," specifies the number of samples in the sampling mode."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Return Value:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"OPRT_OK - Success"}),"\n",(0,i.jsxs)(n.li,{children:["Others, please refer to the ",(0,i.jsx)(n.code,{children:"OS_ADAPTER_ADC"})," section in the file ",(0,i.jsx)(n.code,{children:"tuya_error_code.h"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"tkl_adc_deinit",children:"tkl_adc_deinit"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:"OPERATE_RET tkl_adc_deinit(TUYA_ADC_NUM_E port_num);\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Function Description:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"ADC De-initialization"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Parameters:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"port_num"}),": ADC port number"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Return Value:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"OPRT_OK - Success"}),"\n",(0,i.jsxs)(n.li,{children:["Others, please refer to the ",(0,i.jsx)(n.code,{children:"OS_ADAPTER_ADC"})," section in the file ",(0,i.jsx)(n.code,{children:"tuya_error_code.h"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"tkl_adc_width_get",children:"tkl_adc_width_get"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:"uint8_t tkl_adc_width_get(TUYA_ADC_NUM_E port_num);\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Function Description:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"ADC Query Resolution (bit width)"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Parameters:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"port_num"}),": ADC port number"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Return Value:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"OPRT_OK - Success"}),"\n",(0,i.jsxs)(n.li,{children:["Others, please refer to the ",(0,i.jsx)(n.code,{children:"OS_ADAPTER_ADC"})," section in the file ",(0,i.jsx)(n.code,{children:"tuya_error_code.h"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"tkl_adc_ref_voltage_get",children:"tkl_adc_ref_voltage_get"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:"uint32_t tkl_adc_ref_voltage_get(TUYA_ADC_NUM_E port_num);\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Function Description:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"ADC Query Reference Voltage"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Parameters:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"port_num"}),": ADC port number"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Return Value:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"OPRT_OK - Success"}),"\n",(0,i.jsxs)(n.li,{children:["Others, please refer to the ",(0,i.jsx)(n.code,{children:"OS_ADAPTER_ADC"})," section in the file ",(0,i.jsx)(n.code,{children:"tuya_error_code.h"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"tkl_adc_temperature_get",children:"tkl_adc_temperature_get"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:"int32_t tkl_adc_temperature_get(void);\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Function Description:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"ADC Query Temperature (refers to querying the chip temperature here)"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Return Value:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"OPRT_OK - Success"}),"\n",(0,i.jsxs)(n.li,{children:["Others, please refer to the ",(0,i.jsx)(n.code,{children:"OS_ADAPTER_ADC"})," section in the file ",(0,i.jsx)(n.code,{children:"tuya_error_code.h"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"tkl_adc_read_data",children:"tkl_adc_read_data"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:"OPERATE_RET tkl_adc_read_data(TUYA_ADC_NUM_E port_num, int32_t *buff, uint16_t len);\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Function Description:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"ADC Read Data"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Parameters:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"port_num"}),": ADC port number"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"buff"}),": ADC data buffer"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"len"}),": Length of the ADC data buffer"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Return Value:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"OPRT_OK - Success"}),"\n",(0,i.jsxs)(n.li,{children:["Others, please refer to the ",(0,i.jsx)(n.code,{children:"OS_ADAPTER_ADC"})," section in the file ",(0,i.jsx)(n.code,{children:"tuya_error_code.h"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"tkl_adc_read_single_channel",children:"tkl_adc_read_single_channel"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:"OPERATE_RET tkl_adc_read_single_channel(TUYA_ADC_NUM_E port_num, uint8_t ch_id, int32_t *data);\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Function Description:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"ADC Read Data (Single Channel)"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Parameters:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"port_num"}),": ADC port number"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ch_id"}),": ADC channel number"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"data"}),": ADC data buffer"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Return Value:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"OPRT_OK - Success"}),"\n",(0,i.jsxs)(n.li,{children:["Others, please refer to the ",(0,i.jsx)(n.code,{children:"OS_ADAPTER_ADC"})," section in the file ",(0,i.jsx)(n.code,{children:"tuya_error_code.h"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"tkl_adc_read_voltage",children:"tkl_adc_read_voltage"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:"OPERATE_RET tkl_adc_read_voltage(TUYA_ADC_NUM_E port_num, int32_t *buff, uint16_t len);\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Function Description:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"ADC Read Voltage"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Parameters:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"port_num"}),": ADC port number"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"buf"}),": ADC voltage buffer"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"len"}),": Length of the ADC voltage buffer"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Return Value:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"OPRT_OK - Success"}),"\n",(0,i.jsxs)(n.li,{children:["Others, please refer to the ",(0,i.jsx)(n.code,{children:"OS_ADAPTER_ADC"})," section in the file ",(0,i.jsx)(n.code,{children:"tuya_error_code.h"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.h3,{id:"example-1",children:"Example 1"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:"void tuya_adc_single_channel_test(void)\n{\n    OPERATE_RET ret;\n    TUYA_ADC_BASE_CFG_T adc_cfg;\n    uint32_t adc_value = 0;\n    uint16_t channel = 0;\n\n    adc_cfg.ch_list.data = 1; // or adc_cfg.ch_list.bits.ch_0 = 1;\n    adc_cfg.ch_nums = 1;\n    adc_cfg.type = TUYA_ADC_INNER_SAMPLE_VOL;\n    adc_cfg.mode = TUYA_ADC_SINGLE;\n    adc_cfg.width = 10;\n    adc_cfg.conv_cnt = 1;\n\n    ret = tkl_adc_init(ADC_NUM_0, &adc_cfg);\n    if(ret != OPRT_OK) {\n        // failed\n        return;\n    }\n\n    ret = tkl_adc_read_single_channel(ADC_NUM_0, channel, &adc_value);\n    if(ret != OPRT_OK) {\n        // failed\n        return;\n    }\n\n    // Output the value of adc_value\n\n    ret = tkl_adc_deinit(ADC_NUM_0);\n    if(ret != OPRT_OK) {\n        // failed\n        return;\n    }\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"example-2",children:"Example 2"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:"#define ADC_CHANNEL_NUM 3\n\nvoid tuya_adc_multi_channel_test(void)\n{\n    OPERATE_RET ret;\n    TUYA_ADC_BASE_CFG_T adc_cfg;\n    uint32_t adc_value[ADC_CHANNEL_NUM] = {0};\n\n    adc_cfg.ch_list.bits.ch_0 = 1;\n    adc_cfg.ch_list.bits.ch_1 = 1;\n    adc_cfg.ch_list.bits.ch_2 = 1;\n    adc_cfg.ch_nums = ADC_CHANNEL_NUM;\n    adc_cfg.type = TUYA_ADC_INNER_SAMPLE_VOL;\n    adc_cfg.mode = TUYA_ADC_SCAN;\n    adc_cfg.width = 10;\n    adc_cfg.conv_cnt = 1;\n\n    ret = tkl_adc_init(ADC_NUM_0, &adc_cfg);\n    if(ret != OPRT_OK) {\n        // failed\n        return;\n    }\n\n    ret = tkl_adc_read_data(ADC_NUM_0, adc_value, ADC_CHANNEL_NUM);\n    if(ret != OPRT_OK) {\n        // failed\n        return;\n    }\n\n    // Output the values of adc_value[ADC_CHANNEL_NUM]\n\n    ret = tkl_adc_deinit(ADC_NUM_0);\n    if(ret != OPRT_OK) {\n        // failed\n        return;\n    }\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(_,{...e})}):_(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>d});var l=t(6540);const i={},s=l.createContext(i);function c(e){const n=l.useContext(s);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),l.createElement(s.Provider,{value:n},e.children)}}}]);