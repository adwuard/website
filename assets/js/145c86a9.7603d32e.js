"use strict";(self.webpackChunkchaos_mesh_website=self.webpackChunkchaos_mesh_website||[]).push([[8164],{2027:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>_,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"tkl-api/tkl_spi","title":"SPI Driver","description":"Brief Description","source":"@site/docs/tkl-api/tkl_spi.md","sourceDirName":"tkl-api","slug":"/tkl-api/tkl_spi","permalink":"/docs/tkl-api/tkl_spi","draft":false,"unlisted":false,"editUrl":"https://github.com/tuya/TuyaOpen/edit/master/docs/tkl-api/tkl_spi.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Semaphore","permalink":"/docs/tkl-api/tkl_semaphore"},"next":{"title":"System Interface","permalink":"/docs/tkl-api/tkl_system"}}');var s=t(4848),l=t(8453);const r={},d="SPI Driver",_={},c=[{value:"Brief Description",id:"brief-description",level:2},{value:"API Description",id:"api-description",level:2},{value:"tkl_spi_init",id:"tkl_spi_init",level:3},{value:"TUYA_SPI_ROLE_E:",id:"tuya_spi_role_e",level:4},{value:"TUYA_SPI_MODE_E:",id:"tuya_spi_mode_e",level:4},{value:"TUYA_SPI_TYPE_E:",id:"tuya_spi_type_e",level:4},{value:"TUYA_SPI_DATABITS_E:",id:"tuya_spi_databits_e",level:4},{value:"TUYA_SPI_BIT_ORDER_E:",id:"tuya_spi_bit_order_e",level:4},{value:"tkl_spi_deinit",id:"tkl_spi_deinit",level:3},{value:"tkl_spi_send",id:"tkl_spi_send",level:3},{value:"tkl_spi_recv",id:"tkl_spi_recv",level:3},{value:"tkl_spi_transfer",id:"tkl_spi_transfer",level:3},{value:"tkl_spi_abort_transfer",id:"tkl_spi_abort_transfer",level:3},{value:"tkl_spi_get_status",id:"tkl_spi_get_status",level:3},{value:"TUYA_SPI_STATUS_T:",id:"tuya_spi_status_t",level:4},{value:"tkl_spi_irq_init",id:"tkl_spi_irq_init",level:3},{value:"tkl_spi_irq_enable",id:"tkl_spi_irq_enable",level:3},{value:"tkl_spi_irq_disable",id:"tkl_spi_irq_disable",level:3},{value:"tkl_spi_get_data_count",id:"tkl_spi_get_data_count",level:3},{value:"1. SPI Example 1",id:"1-spi-example-1",level:2},{value:"2. SPI Using Interrupt Example 2",id:"2-spi-using-interrupt-example-2",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"spi-driver",children:"SPI Driver"})}),"\n",(0,s.jsx)(n.h2,{id:"brief-description",children:"Brief Description"}),"\n",(0,s.jsx)(n.p,{children:"SPI (Serial Peripheral Interface) is a high-speed, full-duplex, synchronous communication bus. SPI operates in a master-slave mode, typically with one master device and one or more slave devices."}),"\n",(0,s.jsx)(n.p,{children:"The signal lines of the SPI controller are described as follows:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"MISO: Master device data input, slave device data output;"}),"\n",(0,s.jsx)(n.li,{children:"MOSI: Master device data output, slave device data input;"}),"\n",(0,s.jsx)(n.li,{children:"SCK: Clock signal, generated by the master device;"}),"\n",(0,s.jsx)(n.li,{children:"CS: Slave device enable signal, controlled by the master device. This signal can be part of the SPI peripheral or implemented with a GPIO pin."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The typical wiring method for the SPI bus is as follows:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://images.tuyacn.com/fe-static/docs/img/fd2d8ee2-cef2-44a0-ae58-7039833d1e0c.png",alt:"image-20220411140500420"})}),"\n",(0,s.jsx)(n.p,{children:"The SPI bus supports four working modes, depending on the combination of the serial synchronous clock polarity (CPOL) and the serial synchronous clock phase (CPHA)."}),"\n",(0,s.jsx)(n.p,{children:"CPOL is used to determine the idle level of the SCLK clock signal. When CPOL=0, the idle level is low, and when CPOL=1, the idle level is high. CPHA is used to determine the sampling time. When CPHA=0, data is sampled on the first clock edge of each cycle and output on the second clock edge. When CPHA=1, data is sampled on the second clock edge of each cycle and output on the first clock edge. The clock phase and polarity of the SPI master module and the communicating peripheral should be consistent."}),"\n",(0,s.jsx)(n.p,{children:"The timing diagrams for the four working modes are described as follows:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Mode 0: CPOL=0, CPHA=0. The SCK serial clock line is idle at a low level, and data is sampled on the rising edge of the SCK clock and switched on the falling edge."}),"\n",(0,s.jsx)(n.li,{children:"Mode 1: CPOL=0, CPHA=1. The SCK serial clock line is idle at a low level, and data is sampled on the falling edge of the SCK clock and switched on the rising edge."}),"\n",(0,s.jsx)(n.li,{children:"Mode 2: CPOL=1, CPHA=0. The SCK serial clock line is idle at a high level, and data is sampled on the falling edge of the SCK clock and switched on the rising edge."}),"\n",(0,s.jsx)(n.li,{children:"Mode 3: CPOL=1, CPHA=1. The SCK serial clock line is idle at a high level, and data is sampled on the rising edge of the SCK clock and switched on the falling edge."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"api-description",children:"API Description"}),"\n",(0,s.jsx)(n.h3,{id:"tkl_spi_init",children:"tkl_spi_init"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",children:"OPERATE_RET tkl_spi_init(TUYA_SPI_NUM_E port, const TUYA_SPI_BASE_CFG_T *cfg);\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Function Description:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Initializes the corresponding SPI instance via the port number and basic configuration, returning the initialization result."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Parameters:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"port"}),": Port number."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"cfg"}),": SPI basic configuration."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",children:"typedef struct {\n    TUYA_SPI_ROLE_E      role;\n    TUYA_SPI_MODE_E      mode;\n    TUYA_SPI_TYPE_E      type;\n    TUYA_SPI_DATABITS_E  databits;\n    TUYA_SPI_BIT_ORDER_E bitorder;\n    uint32_t               freq_hz;\n    uint32_t               spi_dma_flags; /*!< SPI dma format , 1 use dma */\n} TUYA_SPI_BASE_CFG_T;\n"})}),"\n",(0,s.jsx)(n.h4,{id:"tuya_spi_role_e",children:"TUYA_SPI_ROLE_E:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Definition"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Remarks"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"TUYA_SPI_ROLE_INACTIVE"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"SPI inactive"}),(0,s.jsx)(n.td,{style:{textAlign:"left"}})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"TUYA_SPI_ROLE_MASTER"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"SPI full-duplex master mode"}),(0,s.jsx)(n.td,{style:{textAlign:"left"}})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"TUYA_SPI_ROLE_SLAVE"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"SPI full-duplex slave mode"}),(0,s.jsx)(n.td,{style:{textAlign:"left"}})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"TUYA_SPI_ROLE_MASTER_SIMPLEX"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"SPI half-duplex master mode"}),(0,s.jsx)(n.td,{style:{textAlign:"left"}})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"TUYA_SPI_ROLE_SLAVE_SIMPLEX"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"SPI half-duplex slave mode"}),(0,s.jsx)(n.td,{style:{textAlign:"left"}})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"tuya_spi_mode_e",children:"TUYA_SPI_MODE_E:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Definition"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Remarks"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"TUYA_SPI_MODE0"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"CPOL = 0, CPHA = 0"}),(0,s.jsx)(n.td,{style:{textAlign:"left"}})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"TUYA_SPI_MODE1"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"CPOL = 0, CPHA = 1"}),(0,s.jsx)(n.td,{style:{textAlign:"left"}})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"TUYA_SPI_MODE2"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"CPOL = 1, CPHA = 0"}),(0,s.jsx)(n.td,{style:{textAlign:"left"}})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"TUYA_SPI_MODE3"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"CPOL = 1, CPHA = 1"}),(0,s.jsx)(n.td,{style:{textAlign:"left"}})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"tuya_spi_type_e",children:"TUYA_SPI_TYPE_E:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Definition"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Remarks"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"TUYA_SPI_AUTO_TYPE"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"SS pin mode, hardware auto-config"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"SS: slave select, corresponds to CS pin"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"TUYA_SPI_SOFT_TYPE"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"SS pin mode, software manual-config"}),(0,s.jsx)(n.td,{style:{textAlign:"left"}})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"TUYA_SPI_SOFT_ONE_WIRE_TYPE"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Three-wire mode, SS pin invalid"}),(0,s.jsx)(n.td,{style:{textAlign:"left"}})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"tuya_spi_databits_e",children:"TUYA_SPI_DATABITS_E:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Definition"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Remarks"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"TUYA_SPI_DATA_BIT8"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"8-bit data mode"}),(0,s.jsx)(n.td,{style:{textAlign:"left"}})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"TUYA_SPI_DATA_BIT16"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"16-bit data mode"}),(0,s.jsx)(n.td,{style:{textAlign:"left"}})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"tuya_spi_bit_order_e",children:"TUYA_SPI_BIT_ORDER_E:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Definition"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Remarks"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"TUYA_SPI_ORDER_MSB2LSB"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"High bit (MSB) first, low bit (LSB) last"}),(0,s.jsx)(n.td,{style:{textAlign:"left"}})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"TUYA_SPI_ORDER_LSB2MSB"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Low bit (LSB) first, high bit (MSB) last"}),(0,s.jsx)(n.td,{style:{textAlign:"left"}})]})]})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Return Value:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["OPRT_OK Success, others please refer to the file ",(0,s.jsx)(n.code,{children:"tuya_error_code.h"}),", OS_ADAPTER_SPI definition section."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"tkl_spi_deinit",children:"tkl_spi_deinit"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",children:"OPERATE_RET tkl_spi_deinit(TUYA_SPI_NUM_E port);\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Function Description:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Deinitializes the SPI instance. This interface will stop the SPI instance and release related software and hardware resources."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Parameters:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"port"}),": Port number."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Return Value:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["OPRT_OK Success, others please refer to the file ",(0,s.jsx)(n.code,{children:"tuya_error_code.h"}),", OS_ADAPTER_SPI definition section."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"tkl_spi_send",children:"tkl_spi_send"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",children:"OPERATE_RET tkl_spi_send(TUYA_SPI_NUM_E port, void *data, uint16_t size);\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Function Description:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"SPI starts data transmission."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Parameters:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"port"}),": Port number."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"data"}),": Buffer address of data to be sent."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"size"}),": Length of data to be sent."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Return Value:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["OPRT_OK Success, others please refer to the file ",(0,s.jsx)(n.code,{children:"tuya_error_code.h"}),", OS_ADAPTER_SPI definition section."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"tkl_spi_recv",children:"tkl_spi_recv"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",children:"OPERATE_RET tkl_spi_recv(TUYA_SPI_NUM_E port, void *data, uint16_t size);\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Function Description:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"SPI starts data reception."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Parameters:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"port"}),": Port number."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"data"}),": Buffer address of data to be received."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"size"}),": Length of data to be received."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Return Value:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["OPRT_OK Success, others please refer to the file ",(0,s.jsx)(n.code,{children:"tuya_error_code.h"}),", OS_ADAPTER_SPI definition section."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"tkl_spi_transfer",children:"tkl_spi_transfer"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",children:"OPERATE_RET tkl_spi_transfer(TUYA_SPI_NUM_E port, void* send_buf, void* receive_buf, uint32_t length);\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Function Description:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"SPI starts data transfer."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Parameters:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"port"}),": Port number."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"send_buf"}),": Buffer address of data to be sent."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"receive_buf"}),": Buffer address of data to be received."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"length"}),": Length."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Return Value:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["OPRT_OK Success, others please refer to the file ",(0,s.jsx)(n.code,{children:"tuya_error_code.h"}),", OS_ADAPTER_SPI definition section."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"tkl_spi_abort_transfer",children:"tkl_spi_abort_transfer"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",children:"OPERATE_RET tkl_spi_abort_transfer(TUYA_SPI_NUM_E port);\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Function Description:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"SPI aborts data transfer or aborts data sending (receiving)."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Parameters:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"port"}),": Port number."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Return Value:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["OPRT_OK Success, others please refer to the file ",(0,s.jsx)(n.code,{children:"tuya_error_code.h"}),", OS_ADAPTER_SPI definition section."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"tkl_spi_get_status",children:"tkl_spi_get_status"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",children:"OPERATE_RET tkl_spi_get_status(TUYA_SPI_NUM_E port, TUYA_SPI_STATUS_T *status);\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Function Description:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Gets the SPI status at the current time."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Parameters:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"port"}),": Port number."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Return Value:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The structure of the SPI status, the definition of the SPI status can be found in the definition of ",(0,s.jsx)(n.code,{children:"TUYA_SPI_STATUS_T"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"tuya_spi_status_t",children:"TUYA_SPI_STATUS_T:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Definition"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Remarks"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"busy : 1"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Transmission/reception busy status"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"1 is valid"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"data_lost : 1"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Data lost"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"1 is valid"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"mode_fault : 1"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Mode error"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"1 is valid"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"tkl_spi_irq_init",children:"tkl_spi_irq_init"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",children:"OPERATE_RET tkl_spi_irq_init(TUYA_SPI_NUM_E port, TUYA_SPI_IRQ_CB cb);\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Function Description:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"SPI interrupt initialization."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Parameters:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"port"}),": Port number."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"cb"}),": Interrupt callback function."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Return Value:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["OPRT_OK Success, others please refer to the file ",(0,s.jsx)(n.code,{children:"tuya_error_code.h"}),", OS_ADAPTER_SPI definition section."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"tkl_spi_irq_enable",children:"tkl_spi_irq_enable"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",children:"OPERATE_RET tkl_spi_irq_enable(TUYA_SPI_NUM_E port);\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Function Description:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Enables SPI interrupt."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Parameters:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"port"}),": Port number."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Return Value:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["OPRT_OK Success, others please refer to the file ",(0,s.jsx)(n.code,{children:"tuya_error_code.h"}),", OS_ADAPTER_SPI definition section."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"tkl_spi_irq_disable",children:"tkl_spi_irq_disable"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",children:"OPERATE_RET tkl_spi_irq_disable(TUYA_SPI_NUM_E port);\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Function Description:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Disables SPI interrupt."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Parameters:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"port"}),": Port number."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Return Value:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["OPRT_OK Success, others please refer to the file ",(0,s.jsx)(n.code,{children:"tuya_error_code.h"}),", OS_ADAPTER_SPI definition section."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"tkl_spi_get_data_count",children:"tkl_spi_get_data_count"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",children:"int32_t tkl_spi_get_data_count(TUYA_SPI_NUM_E port);\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Function Description:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Gets the SPI transmission byte length."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Parameters:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"port"}),": Port number."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Return Value:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"< 0"}),": Error."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:">= 0"}),": The byte length of the last transmission. This can be from any of the operations: ",(0,s.jsx)(n.code,{children:"tkl_spi_send"}),", ",(0,s.jsx)(n.code,{children:"tkl_spi_recv"}),", or ",(0,s.jsx)(n.code,{children:"tkl_spi_transfer"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h1,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.h2,{id:"1-spi-example-1",children:"1. SPI Example 1"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",children:"void tuya_spi_test1(void)\n{\n    OPERATE_RET ret;\n    TUYA_SPI_BASE_CFG_T cfg;\n    TUYA_SPI_STATUS_T status;\n    //receive buffer\n    char rcv_buf[8];\n    //data to send\n    char send_buf[8] = {0,1,2,3,4,5,6,7};\n\n    tkl_io_pinmux_config(TUYA_IO_PIN_0, TUYA_SPI0_MISO);\n    tkl_io_pinmux_config(TUYA_IO_PIN_1, TUYA_SPI0_MOSI);\n    tkl_io_pinmux_config(TUYA_IO_PIN_2, TUYA_SPI0_CS);\n    tkl_io_pinmux_config(TUYA_IO_PIN_3, TUYA_SPI0_CLK);\n\n    cfg.role = TUYA_SPI_ROLE_MASTER;\n    cfg.mode = TUYA_SPI_MODE0;\n    cfg.type = TUYA_SPI_AUTO_TYPE;\n    cfg.databits = TUYA_SPI_DATA_BIT8;\n    cfg.bitorder = TUYA_SPI_ORDER_MSB2LSB;\n    cfg.freq_hz = 1000000;\n\n    ret = tkl_spi_init(TUYA_SPI_NUM_0, &cfg);\n    if (ret != OPRT_OK) {\n        //fail\n        return;\n    }\n\n    ret = tkl_spi_send(TUYA_SPI_NUM_0, send_buf, 8);\n    if (ret < 0) {\n        //failed\n    }\n\n    tkl_spi_get_status(TUYA_SPI_NUM_0, &status);\n    while (status.busy) {\n        tkl_spi_get_status(TUYA_SPI_NUM_0, &status);\n        tkl_system_sleep(2);\n    }\n\n    ret = tkl_spi_recv(TUYA_SPI_NUM_0, rcv_buf, 8);\n    if (ret < 0) {\n        //failed\n    }\n\n    tkl_spi_get_status(TUYA_SPI_NUM_0, &status);\n    while (status.busy) {\n        tkl_spi_get_status(TUYA_SPI_NUM_0, &status);\n        tkl_system_sleep(2);\n    }\n    ret = tkl_spi_transfer(TUYA_SPI_NUM_0, send_buf, rcv_buf, 6);\n    if (ret < 0) {\n        //failed\n    }\n\n    tkl_spi_get_status(TUYA_SPI_NUM_0, &status);\n    while (status.busy) {\n        tkl_spi_get_status(TUYA_SPI_NUM_0, &status);\n        tkl_system_sleep(2);\n    }\n    //uninitialize iic\n    ret = tkl_spi_deinit(TUYA_SPI_NUM_0);\n    if (ret != 0) {\n       //failed\n    }\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"2-spi-using-interrupt-example-2",children:"2. SPI Using Interrupt Example 2"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",children:'int event_flag = -1;\nstatic void spi_event_cb(TUYA_SPI_NUM_E port, TUYA_SPI_IRQ_EVT_E event)\n{\n    //printf("\\nspi_event_cb_fun:%d\\n",event);\n    event_flag = event;\n}\n\nvoid tuya_spi_test2(void)\n{\n    OPERATE_RET ret;\n    TUYA_SPI_BASE_CFG_T cfg;\n    TUYA_SPI_STATUS_T status;\n    //receive buffer\n    char rcv_buf[6];\n    //data to send\n    char send_buf[6] = {0x90,0x0,0x0,0x0,0x0,0x0};\n\n    tkl_io_pinmux_config(TUYA_IO_PIN_0, TUYA_SPI0_MISO);\n    tkl_io_pinmux_config(TUYA_IO_PIN_1, TUYA_SPI0_MOSI);\n    tkl_io_pinmux_config(TUYA_IO_PIN_2, TUYA_SPI0_CS);\n    tkl_io_pinmux_config(TUYA_IO_PIN_3, TUYA_SPI0_CLK);\n\n    cfg.role = TUYA_SPI_ROLE_MASTER;\n    cfg.mode = TUYA_SPI_MODE0;\n    cfg.type = TUYA_SPI_AUTO_TYPE;\n    cfg.databits = TUYA_SPI_DATA_BIT8;\n    cfg.bitorder = TUYA_SPI_ORDER_MSB2LSB;\n    cfg.freq_hz = 1000000;\n\n    ret = tkl_spi_init(TUYA_SPI_NUM_0, &cfg);\n    if (ret != OPRT_OK) {\n        //fail\n        return;\n    }\n\n    tkl_spi_irq_init(TUYA_SPI_NUM_0 , spi_event_cb);\n    tkl_spi_irq_enable(TUYA_SPI_NUM_0);\n\n    event_flag = -1;\n    ret = tkl_spi_transfer(TUYA_SPI_NUM_0, send_buf, rcv_buf, 6);\n    if (ret < 0) {\n        //failed\n    }\n\n    while (TUYA_SPI_EVENT_TRANSFER_COMPLETE != event_flag) {\n        tkl_system_sleep(2);\n    }\n    //up Transfer Complete\n    event_flag = -1;\n    ret = tkl_spi_send(TUYA_SPI_NUM_0, send_buf, 6);\n    if (ret < 0) {\n        //failed\n    }\n    while (TUYA_SPI_EVENT_TX_COMPLETE != event_flag) {\n        tkl_system_sleep(2);\n    }\n    // up send Complete,\n\n    event_flag = -1;\n    ret = tkl_spi_recv(TUYA_SPI_NUM_0, rcv_buf, 6);\n    if (ret < 0) {\n        //failed\n    }\n    while (TUYA_SPI_EVENT_RX_COMPLETE != event_flag) {\n        tkl_system_sleep(2);\n    }\n    // up recv Complete,\n    tkl_spi_irq_disable(TUYA_SPI_NUM_0);\n    //uninitialize iic\n    ret = tkl_spi_deinit(TUYA_SPI_NUM_0);\n    if (ret != 0) {\n       //failed\n    }\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>d});var i=t(6540);const s={},l=i.createContext(s);function r(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);