"use strict";(self.webpackChunkchaos_mesh_website=self.webpackChunkchaos_mesh_website||[]).push([[7546],{4204:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>c,default:()=>a,frontMatter:()=>l,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"tkl-api/tkl_system","title":"System Interface","description":"Description","source":"@site/docs/tkl-api/tkl_system.md","sourceDirName":"tkl-api","slug":"/tkl-api/tkl_system","permalink":"/website/docs/tkl-api/tkl_system","draft":false,"unlisted":false,"editUrl":"https://github.com/tuya/TuyaOpen/edit/master/docs/tkl-api/tkl_system.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"SPI Driver","permalink":"/website/docs/tkl-api/tkl_spi"},"next":{"title":"Thread","permalink":"/website/docs/tkl-api/tkl_thread"}}');var r=n(4848),i=n(8453);const l={},c="System Interface",d={},o=[{value:"Description",id:"description",level:2},{value:"API Description",id:"api-description",level:2},{value:"tkl_system_reset",id:"tkl_system_reset",level:3},{value:"tkl_system_get_tick_count",id:"tkl_system_get_tick_count",level:3},{value:"tkl_system_get_millisecond",id:"tkl_system_get_millisecond",level:3},{value:"tkl_system_get_random",id:"tkl_system_get_random",level:3},{value:"tkl_system_get_reset_reason",id:"tkl_system_get_reset_reason",level:3},{value:"tkl_system_sleep",id:"tkl_system_sleep",level:3},{value:"tkl_system_delay",id:"tkl_system_delay",level:3},{value:"tkl_system_get_cpu_info",id:"tkl_system_get_cpu_info",level:3}];function _(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"system-interface",children:"System Interface"})}),"\n",(0,r.jsx)(s.h2,{id:"description",children:"Description"}),"\n",(0,r.jsx)(s.p,{children:"Interfaces related to system functions."}),"\n",(0,r.jsx)(s.h2,{id:"api-description",children:"API Description"}),"\n",(0,r.jsx)(s.h3,{id:"tkl_system_reset",children:"tkl_system_reset"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-c",children:"void tkl_system_reset(void)\n"})}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Brief Description"}),": Performs a system reset."]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"None"}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Return"}),":"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"None"}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Remarks"}),": Calling this function will cause the system to restart."]}),"\n",(0,r.jsx)(s.h3,{id:"tkl_system_get_tick_count",children:"tkl_system_get_tick_count"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-c",children:"SYS_TICK_T tkl_system_get_tick_count(void)\n"})}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Brief Description"}),": Gets the system tick count."]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"None"}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Return"}),":"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"SYS_TICK_T"}),": The current value of the system tick count."]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"tkl_system_get_millisecond",children:"tkl_system_get_millisecond"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-c",children:"SYS_TIME_T tkl_system_get_millisecond(void)\n"})}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Brief Description"}),": Gets the number of milliseconds since the system started."]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"None"}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Return"}),":"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"SYS_TIME_T"}),": The total number of milliseconds from system start to the current time."]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"tkl_system_get_random",children:"tkl_system_get_random"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-c",children:"int tkl_system_get_random(uint32_t range)\n"})}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Brief Description"}),": Gets a random number within a specified range."]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"range"}),": The range of the random number, from ",(0,r.jsx)(s.code,{children:"0"})," to ",(0,r.jsx)(s.code,{children:"range"})," (not including ",(0,r.jsx)(s.code,{children:"range"})," itself)."]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Return"}),":"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"int"}),": The generated random number."]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Remarks"}),": The random number generator is initialized upon the first call."]}),"\n",(0,r.jsx)(s.h3,{id:"tkl_system_get_reset_reason",children:"tkl_system_get_reset_reason"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-c",children:"TUYA_RESET_REASON_E tkl_system_get_reset_reason(char** describe)\n"})}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Brief Description"}),": Gets the reason for the system reset."]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"describe"}),": A pointer to a string describing the reason for the system reset."]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Return"}),":"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"TUYA_RESET_REASON_E"}),": An enumeration value representing the reset reason."]}),"\n"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-c",children:"    typedef enum {\n        TUYA_RESET_REASON_POWERON    = 0,  ///< Poweron reset type, supply voltage < power-on threshold (TY_RST_POWER_OFF)\n        TUYA_RESET_REASON_HW_WDOG    = 1,  ///< Hardware watchdog reset occurred (TY_RST_HARDWARE_WATCHDOG)\n        TUYA_RESET_REASON_FAULT      = 2,  ///< A access fault occurred (TY_RST_FATAL_EXCEPTION)\n        TUYA_RESET_REASON_SW_WDOG    = 3,  ///< Software watchdog reset occurred (TY_RST_SOFTWARE_WATCHDOG)\n        TUYA_RESET_REASON_SOFTWARE   = 4,  ///< Software triggered reset (TY_RST_SOFTWARE)\n        TUYA_RESET_REASON_DEEPSLEEP  = 5,  ///< Reset caused by entering deep sleep (TY_RST_DEEPSLEEP)\n        TUYA_RESET_REASON_EXTERNAL   = 6,  ///< External reset trigger        (TY_RST_HARDWARE)\n        TUYA_RESET_REASON_UNKNOWN    = 7,  ///< Underterminable cause\n        TUYA_RESET_REASON_FIB        = 8,  ///< Reset originated from the FIB bootloader\n        TUYA_RESET_REASON_BOOTLOADER = 8,  ///< Reset relates to an bootloader\n        TUYA_RESET_REASON_CRASH      = 10, ///< Software crash\n        TUYA_RESET_REASON_FLASH      = 11, ///< Flash failure cause reset\n        TUYA_RESET_REASON_FATAL      = 12, ///< A non-recoverable fatal error occurred\n        TUYA_RESET_REASON_BROWNOUT   = 13, ///< Brown out\n        TUYA_RESET_REASON_UNSUPPORT  = 0xFF,\n    } TUYA_RESET_REASON_E;\n"})}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Remarks"}),": Different reset sources are mapped to specific enumeration values."]}),"\n",(0,r.jsx)(s.h3,{id:"tkl_system_sleep",children:"tkl_system_sleep"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-c",children:"void tkl_system_sleep(uint32_t num_ms)\n"})}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Brief Description"}),": Puts the system to sleep for a specified duration."]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"num_ms"}),": The duration to sleep, in milliseconds."]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Return"}),":"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"None"}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Remarks"}),": Calling this function will pause the task scheduler for the current task for the specified duration."]}),"\n",(0,r.jsx)(s.h3,{id:"tkl_system_delay",children:"tkl_system_delay"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-c",children:"void tkl_system_delay(uint32_t num_ms)\n"})}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Brief Description"}),": Delays the system for a specified duration."]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"num_ms"}),": The duration to delay, in milliseconds."]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Return"}),":"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"None"}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"tkl_system_get_cpu_info",children:"tkl_system_get_cpu_info"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-c",children:"OPERATE_RET tkl_system_get_cpu_info(TUYA_CPU_INFO_T **cpu_ary, int *cpu_cnt)\n"})}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Brief Description"}),": Gets system CPU information."]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"cpu_ary"}),": A pointer to an array of ",(0,r.jsx)(s.code,{children:"TUYA_CPU_INFO_T"})," type, used to receive CPU information."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"cpu_cnt"}),": A pointer used to receive the number of CPUs."]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Return"}),":"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"OPERATE_RET"}),": The operation result, ",(0,r.jsx)(s.code,{children:"OPRT_OK"})," indicates success, other values please refer to ",(0,r.jsx)(s.code,{children:"tuya_error_code.h"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Remarks"}),": This function is not supported in the current implementation and will return ",(0,r.jsx)(s.code,{children:"OPRT_NOT_SUPPORTED"}),"."]})]})}function a(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(_,{...e})}):_(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>c});var t=n(6540);const r={},i=t.createContext(r);function l(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);